{"version":3,"sources":["components/Section/Section.module.css","components/ContactsList/ContactsList.module.css","components/Button/Button.module.css","components/Notification/Notification.module.css","components/Input/Input.module.css","components/Form/Form.module.css","components/Container/Container.module.css","fadeFindContacts.module.css","fadeNotification.module.css","redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Section/Section.js","components/Button/Button.js","components/ContactsList/ContsctsList.js","redux/contacts/contacts-actions.js","components/Input/Input.js","components/Form/Form.js","components/Container/Container.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Action","PARSE_CONTACTS","ADD_CONTACT","DELETE_CONTACT","FILTER_CONTACT","contactsReducer","combineReducers","items","state","type","payload","actionTypes","filter","contact","id","rootReducer","contacts","store","createStore","composeWithDevTools","Section","title","children","appear","style","styles","s","titlePhonebook","titleContacts","className","section","CSSTransition","in","timeout","classNames","unmountOnExit","join","Button","text","listener","color","blueColor","redColor","button","push","onClick","getVisibleContacts","allContacts","normalizeFilter","toLowerCase","name","includes","connect","dispatch","onDeleteContact","TransitionGroup","component","list","map","number","item","contactName","Input","label","value","placeholder","onChange","pattern","htmlFor","input","Form","inputNameId","shortid","generate","inputNumberId","handleInputChange","event","currentTarget","setState","handleAddContact","e","preventDefault","props","Submit","reset","this","onSubmit","form","Component","Container","container","Notification","notification","App","messsage","alert","inputFindId","handleSubmitForm","newContact","some","visibleMessage","onAddContacts","stringMessage","message","setTimeout","handleFindChange","filterValue","onFilterContacts","localStorage","getItem","parseContacts","JSON","parse","onParseContacts","prevProps","prevState","setItem","stringify","fadeNotification","length","fadeFindContacts","display","textAlign","newContacts","contactsAction","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,cAAgB,+BAA+B,OAAS,wBAAwB,aAAe,gC,mBCArMD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,6B,mBCA3DD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,SAAW,2B,mBCAnGD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,UAAY,gCAAgC,SAAW,iC,mBCA3HD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,uB,mBCAvDD,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,MAAQ,gCAAgC,YAAc,sCAAsC,KAAO,+BAA+B,WAAa,uC,mBCAjKD,EAAOC,QAAU,CAAC,MAAQ,gCAAgC,YAAc,sCAAsC,KAAO,+BAA+B,WAAa,uC,mJCOlJC,EAPE,CACbC,eAAgB,iBAChBC,YAAa,eACbC,eAAgB,kBAChBC,eAAgB,mBC8BLC,EALSC,0BAAgB,CACpCC,MA5BiB,WAAoC,IAAnCC,EAAkC,uDAA1B,GAA0B,yCAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACtC,OAAQD,GACJ,KAAKE,EAAYV,eACb,MAAM,GAAN,mBAAYO,GAAZ,YAAsBE,IAE1B,KAAKC,EAAYT,YACb,MAAM,GAAN,mBAAWM,GAAX,CAAkBE,IAEtB,KAAKC,EAAYR,eACb,OAAOK,EAAMI,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOJ,KAElD,QACG,OAAOF,IAiBdI,OAbkB,WAAoC,IAAnCJ,EAAkC,uDAA1B,GAA0B,yCAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACvC,OAAQD,GACJ,KAAKE,EAAYP,eACb,OAAOM,EAEd,QACO,OAAOF,MCXbO,EAAcT,0BAAgB,CAChCU,SAAUX,IAKCY,EAFDC,sBAAaH,EAAaI,iC,wFCbzB,SAASC,EAAT,GAAsD,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,OAC3CC,EAAQ,CAAY,cADwC,EAATC,OACjBC,IAAEC,eAAiBD,IAAEE,eAE7D,OACE,0BAASC,UAAWH,IAAEI,QAAtB,UACE,cAACC,EAAA,EAAD,CAAeC,IAAI,EAAMT,OAAQA,EAAQU,QAAU,IAAKC,WAAYR,IAAGS,eAAa,EAApF,SACGd,GAAS,oBAAIQ,UAAWK,IAAWV,EAAMY,KAAK,MAArC,SAA6Cf,MAExDC,K,8CCTQ,SAASe,EAAT,GAAkD,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAU9B,EAAe,EAAfA,KAAM+B,EAAS,EAATA,MAC/CC,EAAYf,IAAEe,UACdC,EAAWhB,IAAEgB,SAEblB,EAAQ,CAACE,IAAEiB,QAUjB,MARc,QAAVH,GACFhB,EAAMoB,KAAKF,GAGC,SAAVF,GACFhB,EAAMoB,KAAKH,GAIX,wBACEZ,UAAWK,IAAWV,EAAMY,KAAK,MACjC3B,KAAMA,EACNoC,QAASN,EAHX,SAKGD,I,4BCiBDQ,EAAqB,SAACC,EAAanC,GACvC,IAAMoC,EAAkBpC,EAAOqC,cAC/B,OAAOF,EAAYnC,QAAO,qBAAGsC,KACtBD,cAAcE,SAASH,OAajBI,eARS,SAAC,GAAD,QAAEpC,SAAWT,EAAb,EAAaA,MAAOK,EAApB,EAAoBA,OAApB,MAAkC,CACxDI,SAAU8B,EAAmBvC,EAAOK,OAGX,SAAAyC,GAAQ,MAAK,CACxCC,gBAAiB,SAACxC,GAAQuC,ECpCa,CACnC5C,KAAME,EAAYR,eAClBO,QDkC4DI,QAGjDsC,EAjDO,SAAC,GAAmC,IAAjCpC,EAAgC,EAAhCA,SAAUsC,EAAsB,EAAtBA,gBACjC,OACE,mCACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,KAAK3B,UAAWH,IAAE+B,KAA7C,SAEGzC,EAAS0C,KAAI,YAA2B,IAAxBR,EAAuB,EAAvBA,KAAMS,EAAiB,EAAjBA,OAAQ7C,EAAS,EAATA,GAC7B,OACE,cAACiB,EAAA,EAAD,CAAwBE,QAAS,IAAKC,WAAW,SAASX,QAAQ,EAAlE,SACA,qBAAIT,GAAIA,EAAKe,UAAWH,IAAEkC,KAA1B,UACE,8BACE,sBAAM/B,UAAWH,IAAEmC,YAAnB,SAAiCX,IADnC,IACgD,+BAAOS,OAEvD,cAACtB,EAAD,CACEC,KAAM,SACNC,SAAU,kBAAMe,EAAgBxC,IAChC0B,MAAM,YARU1B,a,yBE0BjBgD,MAtCf,YASI,IARFZ,EAQC,EARDA,KACAa,EAOC,EAPDA,MACAC,EAMC,EANDA,MACAlD,EAKC,EALDA,GACAmD,EAIC,EAJDA,YACAxD,EAGC,EAHDA,KACAyD,EAEC,EAFDA,SACAC,EACC,EADDA,QAEA,OACE,wBAAOC,QAAStD,EAAIe,UAAWH,IAAEqC,MAAjC,UACGA,EACD,uBACEtD,KAAMA,EACNyC,KAAMA,EACNc,MAAOA,EACPlD,GAAIA,EACJmD,YAAaA,EACbC,SAAUA,EACVrC,UAAWH,IAAE2C,MACbF,QAASA,Q,iBCsCFG,E,4MAvDb9D,MAAQ,CACN0C,KAAM,GACNS,OAAQ,I,EAGVY,YAAcC,IAAQC,W,EACtBC,cAAgBF,IAAQC,W,EAExBE,kBAAoB,SAAAC,GAAU,IAAD,EACHA,EAAMC,cAAtB3B,EADmB,EACnBA,KAAMc,EADa,EACbA,MACd,EAAKc,SAAL,eAAiB5B,EAAOc,K,EAG1Be,iBAAmB,SAAAC,GACjBA,EAAEC,iBACF,EAAKC,MAAMC,OAAO,EAAK3E,OACvB,EAAK4E,S,EAGPA,MAAQ,WACN,EAAKN,SAAS,CAAE5B,KAAM,GAAIS,OAAQ,M,uDAG1B,IAAD,EACkB0B,KAAK7E,MAAtB0C,EADD,EACCA,KAAMS,EADP,EACOA,OAEd,OACE,uBAAM2B,SAAUD,KAAKN,iBAAkBlD,UAAWH,IAAE6D,KAApD,UACE,cAAC,EAAD,CACExB,MAAM,OACNtD,KAAK,OACLyC,KAAK,OACLc,MAAOd,EACPpC,GAAIuE,KAAKd,YACTN,YAAY,gBACZC,SAAUmB,KAAKV,oBAGjB,cAAC,EAAD,CACEZ,MAAM,SACNtD,KAAK,MACLyC,KAAK,SACLc,MAAOL,EACP7C,GAAIuE,KAAKX,cACTT,YAAY,gBACZC,SAAUmB,KAAKV,kBACfR,QAAQ,uBAGV,cAAC9B,EAAD,CAAQC,KAAM,cAAe7B,KAAM,SAAU+B,MAAO,gB,GAlDzCgD,a,iBCKJC,MARf,YAAkC,IAAbnE,EAAY,EAAZA,SACnB,OAAO,qBAAKO,UAAWH,IAAEgE,UAAlB,SAA8BpE,K,mDCAxB,SAASqE,EAAT,GAAwC,IAAhBrD,EAAe,EAAfA,KAAME,EAAS,EAATA,MACrCC,EAAYf,IAAEe,UACdC,EAAWhB,IAAEgB,SAEblB,EAAQ,CAACE,IAAEkE,cAUjB,MARc,QAAVpD,GACFhB,EAAMoB,KAAKF,GAGC,SAAVF,GACFhB,EAAMoB,KAAKH,GAIX,mBAAGZ,UAAWK,IAAWV,EAAMY,KAAK,MAApC,SACGE,I,ICNDuD,E,4MACJrF,MAAQ,CACNsF,SAAU,GACVC,MAAO,M,EAkBTC,YAAcxB,IAAQC,W,EAEtBwB,iBAAmB,SAAAC,GAEO,KAApBA,EAAWhD,KAIW,KAAtBgD,EAAWvC,OAKI,EAAKuB,MAAMlE,SAASmF,MACrC,SAAAtF,GAAO,OAAIA,EAAQqC,OAASgD,EAAWhD,QAIvC,EAAKkD,eAAL,UAAuBF,EAAWhD,KAAlC,6BAEA,EAAKgC,MAAMmB,cAAcH,GAXzB,EAAKE,eAAe,sCAJpB,EAAKA,eAAe,+B,EAmBxBA,eAAiB,SAACE,GACZ,EAAKxB,SAAS,CAAEyB,QAASD,EAAeP,OAAO,IACjDS,YAAW,WACT,EAAK1B,SAAS,CAAEiB,OAAO,MACtB,M,EAGPU,iBAAmB,SAAA7B,GACjB,IAAM8B,EAAc9B,EAAMC,cAC1B,EAAKK,MAAMyB,iBAAiBD,EAAY1C,Q,kEA/CxC,IAAMhD,EAAW4F,aAAaC,QAAQ,YAChCC,EAAgBC,KAAKC,MAAMhG,GAE3B8F,GACFzB,KAAKH,MAAM+B,gBAAgBH,K,yCAIdI,EAAWC,GACxB9B,KAAKH,MAAMlE,WAAakG,EAAUlG,UACpC4F,aAAaQ,QAAQ,WAAYL,KAAKM,UAAUhC,KAAKH,MAAMlE,a,+BAwCrD,IAAD,EACoBqE,KAAK7E,MAAxB+F,EADD,EACCA,QAASR,EADV,EACUA,MADV,EAEsBV,KAAKH,MAA1BlE,EAFD,EAECA,SAAUJ,EAFX,EAEWA,OAGlB,OACE,qCACE,eAACQ,EAAD,CAASC,MAAM,YAAYE,QAAQ,EAAME,OAAO,YAAhD,UACE,cAACM,EAAA,EAAD,CAAeC,GAAI+D,EAAO9D,QAAS,IAAMC,WAAYoF,IAAkBnF,eAAa,EAApF,SACE,cAACwD,EAAD,CAAcrD,KAAMiE,EAAS/D,MAAM,UAErC,cAAC,EAAD,CAAM2C,OAAQE,KAAKY,sBAGrB,eAAC7E,EAAD,CAASC,MAAM,WAAf,UAGE,cAACU,EAAA,EAAD,CAAeC,GAAIhB,EAASuG,OAAS,EAAGtF,QAAS,IAAKC,WAAYsF,IAAkBrF,eAAa,EAAjG,SACE,cAAC,EAAD,UACE,cAAC,EAAD,CACE4B,MAAM,wBACNtD,KAAK,OACLyC,KAAK,SACLc,MAAOpD,EACPE,GAAIuE,KAAKW,YACT/B,YAAY,UACZC,SAAUmB,KAAKoB,uBAMA,IAApBzF,EAASuG,OACR,sBAAM/F,MAAO,CAAEiG,QAAS,QAASC,UAAW,UAA5C,yBAIA,cAAC,EAAD,CACE1G,SAAUA,c,GA/FNwE,aAmHHpC,gBAXS,SAAC5C,GAAD,MAAY,CAChCQ,SAAUR,EAAMQ,SAAST,MACzBK,OAAQJ,EAAMQ,SAASJ,WAGI,SAACyC,GAAD,MAAe,CACxC4D,gBAAiB,SAACjG,GAAeqC,ELxHA,CACnC5C,KAAME,EAAYV,eAClBS,QKsHyEM,KACvEqF,cAAe,SAACsB,GAAkBtE,ELpHd,SAAC,GAAD,IAAEH,EAAF,EAAEA,KAAMS,EAAR,EAAQA,OAAR,MAAqB,CAC3ClD,KAAME,EAAYT,YAClBQ,QAAS,CACLI,GAAI0D,IAAQC,WACZvB,KAAMA,EACNS,OAAQA,IK+GiCiE,CAA0BD,KACrEhB,iBAAkB,SAAC/F,GAAYyC,ELvGE,CACnC5C,KAAME,EAAYP,eAClBM,QKqGuEE,QAG5DwC,CAA6CyC,GCzH5DgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU9G,MAAOA,EAAjB,SACG,cAAC,GAAD,QAGL+G,SAASC,eAAe,W","file":"static/js/main.efdf044e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__12Cal\",\"titlePhonebook\":\"Section_titlePhonebook__31GGf\",\"titleContacts\":\"Section_titleContacts__3pc1O\",\"appear\":\"Section_appear__310yr\",\"appearActive\":\"Section_appearActive__3s194\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__wjHof\",\"item\":\"ContactsList_item__1D-jW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__OG92j\",\"blueColor\":\"Button_blueColor__2SZa3\",\"redColor\":\"Button_redColor__2R2Qb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3DrH1\",\"blueColor\":\"Notification_blueColor__3UZLL\",\"redColor\":\"Notification_redColor__kl5hD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Input_label__Bkecq\",\"input\":\"Input_input__SzuJh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__DLOEW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3sTgw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeFindContacts_enter__2vTpq\",\"enterActive\":\"fadeFindContacts_enterActive__2Rik-\",\"exit\":\"fadeFindContacts_exit__2djZ-\",\"exitActive\":\"fadeFindContacts_exitActive__221Kp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeNotification_enter__2QokB\",\"enterActive\":\"fadeNotification_enterActive__2NPjd\",\"exit\":\"fadeNotification_exit__ZenUd\",\"exitActive\":\"fadeNotification_exitActive__2w3Le\"};","\r\n const Action =  {\r\n    PARSE_CONTACTS: 'contacts/parse',\r\n    ADD_CONTACT: 'contacts/add',\r\n    DELETE_CONTACT: 'contacts/delete',\r\n    FILTER_CONTACT: 'contacts/filter'\r\n};\r\n\r\nexport default Action","import { combineReducers } from 'redux';\r\nimport actionTypes from './contacts-types';\r\n\r\nconst itemsReducer = (state = [], { type, payload }) => {\r\n    switch (type) {\r\n        case actionTypes.PARSE_CONTACTS:\r\n            return  [...state, ...payload]\r\n          \r\n        case actionTypes.ADD_CONTACT:\r\n            return [...state, payload]\r\n\r\n        case actionTypes.DELETE_CONTACT:\r\n            return state.filter(contact => contact.id !== payload)\r\n        \r\n        default:\r\n           return state\r\n            \r\n    }\r\n};\r\nconst filterReducer = (state = '', { type, payload }) => {\r\n    switch (type) {\r\n        case actionTypes.FILTER_CONTACT:\r\n            return payload;\r\n    \r\n     default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nconst contactsReducer = combineReducers({\r\n    items: itemsReducer,\r\n    filter: filterReducer\r\n});\r\n\r\nexport default contactsReducer;","import { createStore, combineReducers} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\n\r\nconst messageInitialState = {\r\n    messsage: ''\r\n}\r\n\r\nconst alertInitialState = {\r\n    alert: null\r\n}\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: contactsReducer,\r\n})\r\n\r\nconst store = createStore( rootReducer, composeWithDevTools());\r\n\r\nexport default store","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport classNames from 'classnames';\n\nexport default function Section({ title, children, appear, styles}) {\n  const style = [styles === 'phonebook' ? s.titlePhonebook : s.titleContacts];\n\n  return (\n    <section className={s.section}>\n      <CSSTransition in={true} appear={appear} timeout ={500} classNames={s} unmountOnExit>\n        {title && <h2 className={classNames(style.join(' '))}>{title}</h2>}\n      </CSSTransition>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\nimport classNames from 'classnames';\n\nexport default function Button({ text, listener, type, color }) {\n  const blueColor = s.blueColor;\n  const redColor = s.redColor;\n\n  const style = [s.button];\n\n  if (color === 'red') {\n    style.push(redColor);\n  }\n\n  if (color === 'blue') {\n    style.push(blueColor);\n  }\n\n  return (\n    <button\n      className={classNames(style.join(' '))}\n      type={type}\n      onClick={listener}\n    >\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  listener: PropTypes.func,\n  type: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\nimport './fade.css'\nimport Button from '../Button/Button';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport * as contactsAction from '../../redux/contacts/contacts-actions'\n\n const ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <>\n      <TransitionGroup component=\"ul\" className={s.list}>\n        \n        {contacts.map(({ name, number, id }) => {\n          return (\n            <CSSTransition key={id} timeout={250} classNames=\"e-fade\" appear={true}>\n            <li id={id}  className={s.item}>\n              <p>\n                <span className={s.contactName}>{name}</span> <span>{number}</span> \n              </p>\n              <Button\n                text={'Delete'}\n                listener={() => onDeleteContact(id)}\n                color=\"red\"\n              />\n              </li>\n              </CSSTransition>\n          );\n        })}\n      </TransitionGroup>\n    </>\n  );\n }\n\n\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizeFilter = filter.toLowerCase();\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizeFilter),\n  );\n};\n\n\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\n  contacts: getVisibleContacts(items, filter)\n})\n\nconst mapDispatchToProps = dispatch => ({\nonDeleteContact: (id) => {dispatch(contactsAction.contactDelete(id))}\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);","import actionTypes from './contacts-types';\r\nimport shortid from 'shortid';\r\n\r\n\r\nexport const contactsParse = value => ({\r\n    type: actionTypes.PARSE_CONTACTS,\r\n    payload: value\r\n});\r\n\r\nexport const contactAdd = ({name, number}) => ({\r\n    type: actionTypes.ADD_CONTACT,\r\n    payload: {\r\n        id: shortid.generate(),\r\n        name: name,\r\n        number: number\r\n    }\r\n});\r\n\r\nexport const contactDelete = value => ({\r\n    type: actionTypes.DELETE_CONTACT,\r\n    payload: value\r\n});\r\n\r\nexport const contactFilter = value => ({\r\n    type: actionTypes.FILTER_CONTACT,\r\n    payload: value\r\n});","import PropTypes from 'prop-types';\nimport s from './Input.module.css';\n\nfunction Input({\n  name,\n  label,\n  value,\n  id,\n  placeholder,\n  type,\n  onChange,\n  pattern,\n}) {\n  return (\n    <label htmlFor={id} className={s.label}>\n      {label}\n      <input\n        type={type}\n        name={name}\n        value={value}\n        id={id}\n        placeholder={placeholder}\n        onChange={onChange}\n        className={s.input}\n        pattern={pattern}\n      />\n    </label>\n  );\n}\n\nInput.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  pattern: PropTypes.string,\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\nimport s from './Form.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  inputNameId = shortid.generate();\n  inputNumberId = shortid.generate();\n\n  handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleAddContact = e => {\n    e.preventDefault();\n    this.props.Submit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleAddContact} className={s.form}>\n        <Input\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          id={this.inputNameId}\n          placeholder=\"Enter name...\"\n          onChange={this.handleInputChange}\n        />\n\n        <Input\n          label=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          id={this.inputNumberId}\n          placeholder=\"+380990101010\"\n          onChange={this.handleInputChange}\n          pattern=\"^\\+?[0-9]{10,15}$\"\n        />\n\n        <Button text={'Add contact'} type={'submit'} color={'blue'} />\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\nimport classNames from 'classnames';\r\n\r\nexport default function Notification({ text, color }) {\r\n  const blueColor = s.blueColor;\r\n  const redColor = s.redColor;\r\n\r\n  const style = [s.notification];\r\n\r\n  if (color === 'red') {\r\n    style.push(redColor);\r\n  }\r\n\r\n  if (color === 'blue') {\r\n    style.push(blueColor);\r\n  }\r\n\r\n  return (\r\n    <p className={classNames(style.join(' '))}>\r\n      {text}\r\n    </p>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string,\r\n};","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport ContactsList from './components/ContactsList/ContsctsList';\nimport Form from './components/Form/Form';\nimport shortid from 'shortid';\nimport Input from './components/Input/Input';\nimport Container from './components/Container/Container';\nimport { CSSTransition } from 'react-transition-group';\nimport fadeFindContacts from './fadeFindContacts.module.css';\nimport fadeNotification from './fadeNotification.module.css';\nimport Notification from './components/Notification';\nimport * as contactsAction from './redux/contacts/contacts-actions';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  state = {\n    messsage: '',\n    alert: null\n  };\n\n   componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n      \n      if (parseContacts) {\n        this.props.onParseContacts(parseContacts);\n      }\n  };\n  \n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.contacts !== prevProps.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.props.contacts))\n    }\n  }\n\n  inputFindId = shortid.generate();\n\n  handleSubmitForm = newContact => {\n \n    if (newContact.name === '') {\n      this.visibleMessage('Please enter contact name!');\n      return;\n    };\n    if (newContact.number === '') {\n      this.visibleMessage('Please enter contact phone number!');\n      return;\n    };\n\n    const hasContact = this.props.contacts.some(\n      contact => contact.name === newContact.name,\n    );\n\n    if (hasContact) {\n      this.visibleMessage(`${newContact.name} is already in contacts!`);\n    } else {\n      this.props.onAddContacts(newContact);\n    };\n  };\n\n  visibleMessage = (stringMessage) => {\n        this.setState({ message: stringMessage, alert: true })\n      setTimeout(() => {\n        this.setState({ alert: false })\n      }, 3000)\n  }\n\n  handleFindChange = event => {\n    const filterValue = event.currentTarget;\n    this.props.onFilterContacts(filterValue.value);\n  };\n\n  render() {\n    const { message, alert } = this.state;\n    const { contacts, filter } = this.props;\n\n  \n    return (\n      <>\n        <Section title=\"PhoneBook\" appear={true} styles=\"phonebook\">\n          <CSSTransition in={alert} timeout={1000} classNames={fadeNotification} unmountOnExit>\n            <Notification text={message} color=\"red\"/>\n          </CSSTransition>\n          <Form Submit={this.handleSubmitForm} />\n        </Section>\n    \n        <Section title=\"Contacts\" >\n          \n           \n          <CSSTransition in={contacts.length > 1} timeout={250} classNames={fadeFindContacts} unmountOnExit>\n            <Container>\n              <Input\n                label=\"Find contacts by name\"\n                type=\"text\"\n                name=\"filter\"\n                value={filter}\n                id={this.inputFindId}\n                placeholder=\"Find...\"\n                onChange={this.handleFindChange}\n              />\n              </Container>\n            </CSSTransition>\n          \n\n          {contacts.length === 0 ? (\n            <span style={{ display: 'block', textAlign: 'center' }}>\n              No contacts\n            </span>\n          ) : (\n            <ContactsList\n              contacts={contacts}\n            />\n           )} \n        </Section>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    contacts: state.contacts.items,\n    filter: state.contacts.filter\n  })\n\n    const mapDispatchToProps = (dispatch) => ({\n      onParseContacts: (contacts) => { dispatch(contactsAction.contactsParse(contacts)) },\n      onAddContacts: (newContacts) => { dispatch(contactsAction.contactAdd(newContacts)) },\n      onFilterContacts: (filter) => {dispatch(contactsAction.contactFilter(filter))}\n    })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n       <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}